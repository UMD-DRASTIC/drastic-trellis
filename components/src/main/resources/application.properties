# Container build
quarkus.container-image.build=true
quarkus.container-image.builder=docker
quarkus.container-image.group=gregjan
quarkus.container-image.name=drastic-trellis-cassandra
quarkus.container-image.additional-tags=latest
quarkus.package.type=legacy-jar

# Use a container to build Graal containers
 #quarkus.native.container-build=true
 #quarkus.native.container-runtime=docker

# Quarkus Logging
quarkus.log.level=WARN
%dev.quarkus.log.level=INFO
%dev.quarkus.log.console.enable=true
%dev.quarkus.log.console.level=DEBUG
%dev.quarkus.log.category."edu.umd.info.drastic".level=DEBUG
%dev.quarkus.log.category."org.apache.kafka".level=WARN
%dev.quarkus.log.category."com.datastax.oss.driver".level=WARN

# HTTP
quarkus.http.access-log.enabled=false
quarkus.http.port=8080
%dev.quarkus.http.port=9090
%dev.trellis.http.base-url=http://localhost:9090
quarkus.http.limits.max-body-size=10G

# CORS
quarkus.http.cors=true
quarkus.http.cors.methods=GET,HEAD,OPTIONS,PUT,POST,PATCH,DELETE
quarkus.http.cors.headers=Content-Type,Link,Accept,Accept-Datetime,Authorization,Prefer,Slug,cache-control
quarkus.http.cors.exposed-headers=Content-Type,Link,Memento-Datetime,Preference-Applied,Location,Accept-Patch,Accept-Post,Accept-Ranges,ETag,Vary,WWW-Authenticate,cache-control
quarkus.http.cors.access-control-max-age=24H
#quarkus.http.cors.origins=http://localhost,http://0.0.0.0,http://192.168.1.46
quarkus.http.cors.access-control-allow-credentials=true

# Trellis
trellis.http.weak.etag=false
trellis.http.memento.header.dates=false
trellis.http.precondition.required=true
trellis.jdbc.ldp.type=true

# Trellis Cassandra Datasource
%dev.trellis.cassandra.contact.address=localhost
%dev.trellis.cassandra.contact.port=9042
# trellis.cassandra.metrics.dir=/metrics/{{.Task.Name}}

# old JDBC datasource
#quarkus.datasource.db-kind=postgresql
#quarkus.datasource.username=trellis
#quarkus.datasource.password=changeme
#quarkus.datasource.jdbc.url=
#quarkus.datasource.jdbc.min-size=3
#quarkus.datasource.jdbc.max-size=20
#quarkus.flyway.migrate-at-start=true

# JWT
mp.jwt.verify.issuer=NONE
mp.jwt.verify.publickey=NONE
mp.jwt.verify.publickey.location=changeme
%dev.mp.jwt.verify.publickey.location=https://www.trellisldp.org/tests/jwks.json

#kafka.brokers:localhost:9092
%dev.kafka.bootstrap.servers=pop-os:9094

quarkus.kafka.devservices.topic-partitions.objects=2
quarkus.kafka.devservices.topic-partitions.triplestore-graph=2
quarkus.kafka.devservices.topic-partitions.elasticsearch-iri=2
quarkus.kafka.devservices.topic-partitions.new-binaries=2

mp.messaging.outgoing.objects-out.connector=smallrye-kafka
mp.messaging.outgoing.objects-out.value.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.objects-out.topic=objects

mp.messaging.incoming.websocket.connector=smallrye-kafka
mp.messaging.incoming.websocket.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.websocket.topic=objects

mp.messaging.incoming.triplestore.connector=smallrye-kafka
mp.messaging.incoming.triplestore.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.triplestore.topic=objects

mp.messaging.outgoing.triplestore-newgraph.connector=smallrye-kafka
mp.messaging.outgoing.triplestore-newgraph.value.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.triplestore-newgraph.topic=triplestore-graphs

mp.messaging.incoming.elasticsearch-graph-in.connector=smallrye-kafka
mp.messaging.incoming.elasticsearch-graph-in.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.elasticsearch-graph-in.topic=triplestore-graphs

mp.messaging.outgoing.new-binaries-out.connector=smallrye-kafka
mp.messaging.outgoing.new-binaries-out.value.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.new-binaries-out.topic=new-binaries

mp.messaging.incoming.fixity.connector=smallrye-kafka
mp.messaging.incoming.fixity.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.fixity.topic=new-binaries
mp.messaging.incoming.fixity.group.id=fixity

mp.messaging.incoming.manifest.connector=smallrye-kafka
mp.messaging.incoming.manifest.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.manifest.topic=new-binaries
mp.messaging.incoming.manifest.group.id=manifest

mp.messaging.incoming.dce.connector=smallrye-kafka
mp.messaging.incoming.dce.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.dce.topic=new-binaries
mp.messaging.incoming.dce.group.id=dce

mp.messaging.incoming.accessimage.connector=smallrye-kafka
mp.messaging.incoming.accessimage.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.accessimage.topic=new-binaries
mp.messaging.incoming.accessimage.group.id=accessimage
